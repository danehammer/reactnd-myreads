{"version":3,"sources":["utils/BooksAPI.js","Book.js","Shelf.js","BookSearch.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","handleSelectChange","e","preventDefault","_this$props","_this","props","onShelfChange","target","value","this","react_default","a","createElement","className","style","imageLinks","backgroundImage","thumbnail","onChange","disabled","title","authors","map","author","key","Component","Shelf","src_Book","BookSearch","state","searchResults","handleShelfChange","bookChanged","shelfId","forEach","setState","handleSearchChange","shelves","BooksAPI","Array","searchBook","searchShelf","Link","to","process","lib","type","name","minLength","debounceTimeout","placeholder","src_Shelf","App","newShelfId","bookIdsByShelfId","newShelf","findShelf","push","entries","_ref","_ref2","slicedToArray","bookIds","filter","includes","_this2","foundShelf","_this3","Switch","Route","exact","path","render","src_BookSearch","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.71743d2a.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, {headers})\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, {headers})\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({shelf})\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({query})\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nclass Book extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    onShelfChange: PropTypes.func.isRequired\n  }\n\n  handleSelectChange = (e) => {\n    e.preventDefault()\n    const {book, onShelfChange} = this.props\n    onShelfChange(book, e.target.value)\n  }\n\n  render() {\n    const {book} = this.props\n\n    return (\n      <div className='book'>\n        <div\n          className='thumbnail'\n          style={book.imageLinks && {\n            backgroundImage: `url(${book.imageLinks.thumbnail})`\n          }}>\n          <div className='shelf-select'>\n            <select value={book.shelf || 'none'} onChange={this.handleSelectChange}>\n              <option disabled>Move to...</option>\n              <option value='currentlyReading'>Currently Reading</option>\n              <option value='wantToRead'>Want to Read</option>\n              <option value='read'>Read</option>\n              <option value='none'>None</option>\n            </select>\n          </div>\n        </div>\n        <div className='title'>{book.title}</div>\n        {\n          book.authors &&\n          book.authors.map(author => (\n            <div className='author' key={`${book.id}-${author}`}>{author}</div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default Book\n","import React from 'react'\nimport Book from './Book'\nimport PropTypes from 'prop-types'\n\nfunction Shelf(props) {\n  const {books, onShelfChange} = props\n  return (\n    <div className='book-list'>\n      {books.map(book => (\n        <Book\n          book={book}\n          key={book.id}\n          onShelfChange={onShelfChange}\n        />\n      ))}\n    </div>\n  )\n}\n\nShelf.propTypes = {\n  books: PropTypes.array.isRequired,\n  onShelfChange: PropTypes.func.isRequired\n}\n\nexport default Shelf\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport Shelf from './Shelf'\nimport * as BooksAPI from './utils/BooksAPI'\nimport PropTypes from 'prop-types'\nimport {DebounceInput} from 'react-debounce-input'\n\nclass BookSearch extends Component {\n  static propTypes = {\n      shelves: PropTypes.array.isRequired,\n      onShelfChange: PropTypes.func.isRequired\n  }\n\n  state = {\n    searchResults: [],\n  }\n\n  handleShelfChange = (bookChanged, shelfId) => {\n    const {searchResults} = this.state\n\n    // update in our local searchResults\n    searchResults.forEach(book => {\n      if (book.id === bookChanged.id) {\n        book.shelf = shelfId\n      }\n    })\n\n    this.setState({searchResults})\n\n    // notify the parent to change state\n    this.props.onShelfChange(bookChanged, shelfId)\n  }\n\n  handleSearchChange = (e) => {\n    e.preventDefault()\n\n    const {shelves} = this.props\n    const query = e.target.value\n\n    if (query === '') {\n      return\n    }\n\n    BooksAPI.search(query).then((books) => {\n      // search API is buggy and returns `{\"books\": {\"error\": ...}}\n      // breaking the data structure\n      const searchResults = books instanceof Array ? books : []\n\n      searchResults.forEach(searchBook => {\n        let searchShelf\n        shelves.forEach(shelf => {\n          shelf.books.forEach(book => {\n            if (book.id === searchBook.id) {\n              searchShelf = shelf.id\n            }\n          })\n        })\n        searchBook.shelf = searchShelf\n      })\n\n      this.setState({searchResults})\n    })\n  }\n\n  render() {\n    const {searchResults} = this.state\n\n    return (\n      <div>\n        <div className='search-form'>\n          <Link\n            className='back-button'\n            to={`${process.env.PUBLIC_URL}/`}>\n            Back\n          </Link>\n          <DebounceInput\n            className='search-input'\n            type='text'\n            name='query'\n            minLength={2}\n            debounceTimeout={300}\n            placeholder='Search by Title or Author'\n            onChange={this.handleSearchChange}\n          />\n        </div>\n        <Shelf\n          books={searchResults}\n          onShelfChange={this.handleShelfChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default BookSearch\n","import React, {Component} from 'react'\nimport {Route, Link, Switch} from 'react-router-dom'\nimport * as BooksAPI from './utils/BooksAPI'\nimport Shelf from './Shelf'\nimport BookSearch from './BookSearch'\n\nclass App extends Component {\n  state = {\n    shelves: [\n      {\n        id: 'currentlyReading',\n        name: 'Currently Reading',\n        books: []\n      },\n      {\n        id: 'wantToRead',\n        name: 'Want to Read',\n        books: []\n      },\n      {\n        id: 'read',\n        name: 'Read',\n        books: []\n      }\n    ]\n  }\n\n  componentDidMount() {\n    const {shelves} = this.state\n\n    BooksAPI.getAll().then(books => {\n      shelves.forEach(shelf => {\n        shelf.books = books.filter(book => book.shelf === shelf.id)\n      })\n      this.setState({shelves})\n    })\n  }\n\n  findShelf(shelves, shelfId) {\n    let foundShelf = null\n    shelves.forEach(shelf => {\n      if (shelf.id === shelfId) {\n        foundShelf = shelf\n      }\n    })\n    return foundShelf\n  }\n\n  handleShelfChange = (book, newShelfId) => {\n    const {shelves} = this.state\n\n    BooksAPI.update(book, newShelfId).then((bookIdsByShelfId) => {\n      // Add the book that's changing shelves to the target shelf\n      const newShelf = this.findShelf(shelves, newShelfId)\n      if (newShelf) {\n        book.shelf = newShelf.id\n        newShelf.books.push(book)\n      }\n      // update responds with a map of shelf IDs to arrays of book IDs\n      // reflecting the update\n      Object.entries(bookIdsByShelfId).map(([shelfId, bookIds]) => {\n          const shelf = this.findShelf(shelves, shelfId)\n          shelf.books = shelf.books.filter(book => bookIds.includes(book.id))\n      })\n\n      this.setState({shelves})\n    })\n  }\n\n  render() {\n    const {shelves} = this.state\n\n    return (\n      <div className='App'>\n        <Switch>\n          <Route exact path={`${process.env.PUBLIC_URL}/`} render={() => (\n            <div>\n              <header className='App-header'>¡Libros Míos!</header>\n              {\n                shelves.map(shelf => (\n                  <div className='shelf' key={shelf.id}>\n                    <h2>{shelf.name}</h2>\n                    <Shelf\n                      books={shelf.books}\n                      onShelfChange={this.handleShelfChange}\n                    />\n                  </div>\n                ))\n              }\n              <Link\n                to={`${process.env.PUBLIC_URL}/search`}\n                className='add-button'\n              >Add Book</Link>\n            </div>\n          )} />\n          <Route path={`${process.env.PUBLIC_URL}/search`} render={() => (\n            <BookSearch\n              shelves={shelves}\n              onShelfChange={this.handleShelfChange}\n            />\n          )} />\n          <Route render={() => (\n            <div>\n              <h3>Sorry, that page doesn't exist.</h3>\n              <Link to={`${process.env.PUBLIC_URL}/`}>Click here to go to the main page</Link>\n            </div>\n          )} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}